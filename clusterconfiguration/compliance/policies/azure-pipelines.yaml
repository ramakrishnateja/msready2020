name: $(Date:yyyyMMdd)$(Rev:.r)
trigger:
- master

pool:
  name: Hosted Ubuntu 1604
  vmImage: 'ubuntu-16.04'

variables:
  imageRepository: 'ramakrishnateja/policies'
  dockerRegistryServiceConnection: 'my-docker-registry'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  kubeNamespace: 'infra-dev'
  environmentName: 'dev.infra-dev'

stages:
  - stage: Build
    jobs:
      - job: BuildJob
        steps:
          - task: Docker@2
            displayName: Build and Push and image to container registry
            inputs:
              command: buildAndPush
              repository: $(imageRepository)
              dockerfile: $(dockerfilePath)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)

          - task: PublishPipelineArtifact@1
            displayName: 'Publish Artifact: drop'
            inputs:
              artifactName: 'manifests'
              targetPath: 'deploy'

  - stage: Dev
    jobs:
      - deployment: Deploy
        displayName: Deploy App
        pool:
          vmImage: 'Ubuntu-latest'
        environment: $(environmentName)
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadPipelineArtifact@2
                  inputs:
                    artifactName: 'manifests'
                    downloadPath: '$(System.ArtifactsDirectory)/manifests'

                - task: KubernetesManifest@0
                  displayName: Deploy
                  inputs:
                    manifests: manifests/dev.yaml
                    namespace: $(kubeNamespace)
                    containers: |
                      $(imageRepository):$(tag)
                    
        